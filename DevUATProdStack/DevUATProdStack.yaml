---
Parameters:
  CIDRRange:
    Description: VPCCIDR Range (will be a /24 block)
    Type: String
    Default: 172.16.50.0
  PublicSubnetAZ1:
    Description: CIDR Block for the public DMZ subnet 1 located in AZ 1 (x.x.x.1-61/26)
    Type: String
    Default: 172.16.50.0/26
  PublicSubnetAZ2: 
    Description: CIDR Block for the public DMZ subnet 2 located in AZ 2 (x.x.x.65-126/26)
    Type: String
    Default: 172.16.50.64/26
  PrivateSubnetAZ1: 
    Description: CIDR block for private subnet 1 located in AZ 1 (x.x.x.129-190/26)
    Type: String
    Default: 172.16.50.128/26
  PrivateSubnetAZ2: 
    Description: CIDR block for private subnet 2 located in AZ 2 (x.x.x.193-254-190/26)
    Type: String
    Default: 172.16.50.192/26
Mappings:
  RegionMap:
    'ap-south-1':
      AMI: 'ami-d783a9b8'
    'eu-west-3':
      AMI: 'ami-2cf54551'
    'eu-west-2':
      AMI: 'ami-b8b45ddf'
    'eu-west-1':
      AMI: 'ami-466768ac'
    'ap-northeast-2':
      AMI: 'ami-afd86dc1'
    'ap-northeast-1':
      AMI: 'ami-e99f4896'
    'sa-east-1':
      AMI: 'ami-6dca9001'
    'ca-central-1':
      AMI: 'ami-0ee86a6a'
    'ap-southeast-1':
      AMI: 'ami-05868579'
    'ap-southeast-2':
      AMI: 'ami-39f8215b'
    'eu-central-1':
      AMI: 'ami-7c4f7097'
    'us-east-1':
      AMI: 'ami-b70554c8'
    'us-east-2':
      AMI: 'ami-8c122be9'
    'us-west-1':
      AMI: 'ami-e0ba5c83'
    'us-west-2':
      AMI: 'ami-a9d09ed1'
Resources:
  VPCBase:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Fn::Join:
        - ''
        - - Ref: CIDRRange
          - "/24"
      EnableDnsSupport: 'True'
      EnableDnsHostnames: 'True'
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-VPC"
  PublicNetAZ1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '0'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock: !Ref PublicSubnetAZ1
      MapPublicIpOnLaunch: 'True'
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-PublicAZ1"
      VpcId:
        Ref: VPCBase
  PublicNetAZ2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '1'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock: !Ref PublicSubnetAZ2
      MapPublicIpOnLaunch: 'True'
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-PublicAZ2"
      VpcId:
        Ref: VPCBase
  PrivateNetAZ1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '0'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock: !Ref PrivateSubnetAZ1
      MapPublicIpOnLaunch: 'False'
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-PrivateAZ1"
      - Key: Network
        Value: private
      VpcId:
        Ref: VPCBase
  PrivateNetAZ2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '1'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock: !Ref PrivateSubnetAZ2
      MapPublicIpOnLaunch: 'False'
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-PrivateAZ2"
      - Key: Network
        Value: private
      VpcId:
        Ref: VPCBase
  IGWBase:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-IGW"
  VGAIGWBase:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: IGWBase
      VpcId:
        Ref: VPCBase
  RouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCBase
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-PublicRT"
  RouteTablePrivateAZ1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCBase
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-PrivateAZ1RT"
  RouteTablePrivateAZ2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCBase
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-PrivateAZ2RT"
  RoutePublicDefault:
    DependsOn:
    - VGAIGWBase
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: RouteTablePublic
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: IGWBase
  RouteAssociationPublicAZ1Default:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicNetAZ1
      RouteTableId:
        Ref: RouteTablePublic
  RouteAssociationPublicAZ2Default:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicNetAZ2
      RouteTableId:
        Ref: RouteTablePublic
  RouteAssociationPrivateAZ1Default:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateNetAZ1
      RouteTableId:
        Ref: RouteTablePrivateAZ1
  RouteAssociationPrivateAZ2Default:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateNetAZ2
      RouteTableId:
        Ref: RouteTablePrivateAZ2
  NATAZ1:
    Type: AWS::EC2::NatGateway
    DependsOn: VGAIGWBase
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIPNATAZ1
        - AllocationId
      SubnetId:
        Ref: PublicNetAZ1
  EIPNATAZ1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NATAZ1Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: RouteTablePrivateAZ1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NATAZ1
  NATAZ2:
    Type: AWS::EC2::NatGateway
    DependsOn: VGAIGWBase
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIPNATAZ2
        - AllocationId
      SubnetId:
        Ref: PublicNetAZ2
  EIPNATAZ2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NATAZ2Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: RouteTablePrivateAZ2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NATAZ2
  PublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
      Properties:
        GroupName: "InternetSG"
        GroupDescription: "SSH traffic in, all traffic out"
        VpcId:  !Ref VPCBase
        SecurityGroupIngress:
          - IpProtocol: tcp 
            FromPort: '22'
            ToPort: '22'
            CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
          - IpProtocol: -1 
          CidrIp: 0.0.0.0/0
  DevEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      SubnetId: !Ref PrivateNetAZ1
      InstanceType: t2.micro
      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI]
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-Dev"
    DependsOn: PrivateNetAZ1
  UATEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      SubnetId: !Ref PrivateNetAZ1
      InstanceType: t2.micro
      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI]
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-UAT"
    DependsOn: PrivateNetAZ1
  Prod1EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      SubnetId: !Ref PrivateNetAZ1
      InstanceType: t2.micro
      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI]
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-Prod1"
    DependsOn: PrivateNetAZ1
  Prod2EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      SubnetId: !Ref PrivateNetAZ2
      InstanceType: t2.micro
      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI]
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-Prod2"
    DependsOn: PrivateNetAZ2
  BIEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      SubnetId: !Ref PrivateNetAZ2
      InstanceType: t2.micro
      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI]
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-BI"
    DependsOn: PrivateNetAZ2
Outputs:
  VPCID:
    Value:
      Ref: VPCBase
  ElasticIP1:
    Value:
      Ref: EIPNATAZ1
  ElasticIP2:
    Value:
      Ref: EIPNATAZ2
  SubnetPublicAZ1:
    Value:
      Ref: PublicNetAZ1
  SubnetPublicAZ2:
    Value:
      Ref: PublicNetAZ2
  SubnetPrivateAZ1:
    Value:
      Ref: PrivateNetAZ1
  SubnetPrivateAZ2:
    Value:
      Ref: PrivateNetAZ2
  DefaultSG:
    Value:
      Fn::GetAtt:
      - VPCBase
      - DefaultSecurityGroup